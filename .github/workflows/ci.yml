name: Continuous Integration

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - 'docs/**'
      - 'examples/**'
      - '**.md'
  pull_request:
    branches:
      - master
    types:
      - opened
      - reopened
      - synchronize
    paths-ignore:
      - 'docs/**'
      - 'examples/**'
      - '**.md'
  create:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

env:
  DOCKER_BUILDKIT: 1
  GOLANG_VERSION: 1.15

jobs:

  binary:
    name: Build Binary
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Build Binary
        run: make binary
        env:
          GOFLAGS: '-gcflags=-trimpath=${{ github.workspace }} -asmflags=-trimpath=${{ github.workspace }}'
      - name: Cache Artifacts 
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/build/_output/bin/purge
          key: amqp-purge-${{ github.run_id }}-${{ github.run_number }}

  build:
    name: Build Image
    runs-on: ubuntu-18.04
    needs: [binary]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Fetch Cached Artifacts
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/build/_output/bin/purge
          key: purge-${{ github.run_id }}-${{ github.run_number }}
      - name: Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build Image
        uses: docker/build-push-action@v2
        with:
          file: build/Dockerfile
          context: '.'
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: regel/amqp-purge:${{ github.sha }}
          push: false

  release-docker:
    name: Release Image
    runs-on: ubuntu-18.04
    needs: [build]
    if: 
      github.repository == 'regel/amqp-purge' &&
      github.event_name == 'create' && 
      contains(github.ref, 'refs/tags/')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Fetch Cached Artifacts
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/build/_output/bin/purge
          key: amqp-purge-${{ github.run_id }}-${{ github.run_number }}
      - name: Retrieve Tag
        id: get_version
        run: echo ::set-output name=GIT_TAG::$(echo ${GITHUB_REF/refs\/tags\//} | tr -d v)
      - name: Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: DockerHub Login
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Dockerhub
        uses: docker/build-push-action@v2
        with:
          file: build/Dockerfile
          context: '.'
          tags: |
            regel/amqp-purge:latest
            regel/amqp-purge:${{ steps.get_version.outputs.GIT_TAG }}
          push: true


